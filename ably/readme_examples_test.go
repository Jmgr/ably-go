// Generated by test_readme_examples. DO NOT EDIT
package ably_test

import "testing"
import "github.com/ably/ably-go/ably"
import "github.com/ably/ably-go/ably/ablytest"

/* README.md:49 */ import "context"

func TestReadmeExamples(t *testing.T) {
	t.Parallel()

	fmt := struct {
		Println func(a ...interface{}) (n int, err error)
	}{
		Println: func(a ...interface{}) (n int, err error) { return 0, nil },
	}

	app := ablytest.MustSandbox(nil)
	defer safeclose(t, app)
	/* README.md:52 */ ctx := context.Background()
	/* README.md:56 */ client, err := ably.NewRealtime(app.Options(ably.WithClientID("clientID"))...)
	/* README.md:57 */ if err != nil {
		/* README.md:58 */ panic(err)
		/* README.md:59 */
	}
	/* README.md:61 */ channel := client.Channels.Get("test")
	/* README.md:67 */ unsubscribe, err := channel.SubscribeAll(ctx, func(msg *ably.Message) {
		/* README.md:68 */ fmt.Println("Received message:", msg)
		/* README.md:69 */
	})
	/* README.md:70 */ if err != nil {
		/* README.md:71 */ panic(err)
		/* README.md:72 */
	}
	/* README.md:76 */ unsubscribe()
	/* README.md:82 */ unsubscribe1, err := channel.Subscribe(ctx, "EventName1", func(msg *ably.Message) {
		/* README.md:83 */ fmt.Println("Received message:", msg)
		/* README.md:84 */
	})
	/* README.md:85 */ if err != nil {
		/* README.md:86 */ panic(err)
		/* README.md:87 */
	}
	/* README.md:89 */ unsubscribe2, err := channel.Subscribe(ctx, "EventName2", func(msg *ably.Message) {
		/* README.md:90 */ fmt.Println("Received message:", msg)
		/* README.md:91 */
	})
	/* README.md:92 */ if err != nil {
		/* README.md:93 */ panic(err)
		/* README.md:94 */
	}
	/* README.md:98 */ unsubscribe1()
	/* README.md:99 */ unsubscribe2()
	/* README.md:105 */ err = channel.Publish(ctx, "EventName1", "EventData1")
	/* README.md:106 */ if err != nil {
		/* README.md:107 */ panic(err)
		/* README.md:108 */
	}
	/* README.md:114 */ err = channel.Presence.Enter(ctx, "presence data")
	/* README.md:115 */ if err != nil {
		/* README.md:116 */ panic(err)
		/* README.md:117 */
	}
	/* README.md:123 */ err = channel.Presence.EnterClient(ctx, "clientID", "presence data")
	/* README.md:124 */ if err != nil {
		/* README.md:125 */ panic(err)
		/* README.md:126 */
	}
	/* README.md:132 */ clients, err := channel.Presence.Get(ctx)
	/* README.md:133 */ if err != nil {
		/* README.md:134 */ panic(err)
		/* README.md:135 */
	}
	/* README.md:137 */ for _, client := range clients {
		/* README.md:138 */ fmt.Println("Present client:", client)
		/* README.md:139 */
	}
	/* README.md:145 */ unsubscribe, err = channel.Presence.SubscribeAll(ctx, func(msg *ably.PresenceMessage) {
		/* README.md:146 */ fmt.Println("Presence event:", msg)
		/* README.md:147 */
	})
	/* README.md:148 */ if err != nil {
		/* README.md:149 */ panic(err)
		/* README.md:150 */
	}
	/* README.md:154 */ unsubscribe()
	/* README.md:160 */ unsubscribe, err = channel.Presence.Subscribe(ctx, ably.PresenceActionEnter, func(msg *ably.PresenceMessage) {
		/* README.md:161 */ fmt.Println("Presence event:", msg)
		/* README.md:162 */
	})
	/* README.md:163 */ if err != nil {
		/* README.md:164 */ panic(err)
		/* README.md:165 */
	}
	/* README.md:169 */ unsubscribe()
	/* README.md:179 */ {
		/* README.md:183 */ client, err := ably.NewREST(app.Options(ably.WithClientID("clientID"))...)
		/* README.md:184 */ if err != nil {
			/* README.md:185 */ panic(err)
			/* README.md:186 */
		}
		/* README.md:188 */ channel := client.Channels.Get("test")
		/* README.md:194 */ err = channel.Publish(ctx, "HelloEvent", "Hello!")
		/* README.md:195 */ if err != nil {
			/* README.md:196 */ panic(err)
			/* README.md:197 */
		}
		/* README.md:203 */ page, err := channel.History(nil)
		/* README.md:204 */ for ; err == nil && page != nil; page, err = page.Next() {
			/* README.md:205 */ for _, message := range page.Messages() {
				/* README.md:206 */ fmt.Println(message)
				/* README.md:207 */
			}
			/* README.md:208 */
		}
		/* README.md:209 */ if err != nil {
			/* README.md:210 */ panic(err)
			/* README.md:211 */
		}
		/* README.md:217 */ page, err = channel.Presence.Get(nil)
		/* README.md:218 */ for ; err == nil && page != nil; page, err = page.Next() {
			/* README.md:219 */ for _, presence := range page.PresenceMessages() {
				/* README.md:220 */ fmt.Println(presence)
				/* README.md:221 */
			}
			/* README.md:222 */
		}
		/* README.md:223 */ if err != nil {
			/* README.md:224 */ panic(err)
			/* README.md:225 */
		}
		/* README.md:231 */ page, err = channel.Presence.History(nil)
		/* README.md:232 */ for ; err == nil && page != nil; page, err = page.Next() {
			/* README.md:233 */ for _, presence := range page.PresenceMessages() {
				/* README.md:234 */ fmt.Println(presence)
				/* README.md:235 */
			}
			/* README.md:236 */
		}
		/* README.md:237 */ if err != nil {
			/* README.md:238 */ panic(err)
			/* README.md:239 */
		}
		/* README.md:245 */ page, err = client.Stats(&ably.PaginateParams{})
		/* README.md:246 */ for ; err == nil && page != nil; page, err = page.Next() {
			/* README.md:247 */ for _, stat := range page.Stats() {
				/* README.md:248 */ fmt.Println(stat)
				/* README.md:249 */
			}
			/* README.md:250 */
		}
		/* README.md:251 */ if err != nil {
			/* README.md:252 */ panic(err)
			/* README.md:253 */
		}
		/* README.md:257 */
	}
}
